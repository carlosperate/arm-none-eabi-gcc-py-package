name: Build and Test

on: [push, pull_request]

jobs:
  test-release:
    strategy:
      matrix:
        include:
          - os: windows-2019
            python: "3.6"
            gcc: "latest"
          - os: ubuntu-20.04
            python: "3.6"
            gcc: "latest"
          # 3.8 is the oldest Python for aarch64 Ubuntu
          - os: ubuntu-22.04-arm
            python: "3.8"
            gcc: "latest"
          # Newer GCC need macOS 12+ and last pip release for Py3.6 is not compatible
          - os: macos-13
            python: "3.6"
            gcc: "12.3.Rel1"
          # 3.8 is the oldest Python for arm64 macOS
          - os: macos-14
            python: "3.8"
            gcc: "latest"
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: "${{ matrix.os }} - Py ${{ matrix.python }}"
    steps:
      - name: Checkout the project in a subdirectory
        uses: actions/checkout@v4
        with:
          path: "project"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Set up virtualenv and build wheel (Windows)
        if: runner.os == 'Windows'
        working-directory: project
        shell: pwsh
        run: |
          python -m venv .venv
          .\.venv\Scripts\Activate.ps1
          pip install -r requirements.txt
          python tools.py package-creator ${{ matrix.gcc }}

      - name: Set up virtualenv and build wheel (posix)
        if: runner.os != 'Windows'
        working-directory: project
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
          python tools.py package-creator ${{ matrix.gcc }}

      - run: ls project/dist/

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"

      - run: python --version
      - run: pip install --upgrade pip

      - name: Verify GCC arm-none-eabi is not present yet
        shell: bash
        run: |
          if arm-none-eabi-gcc --version; then
            exit 1
          else
            exit 0
          fi

      - name: Install arm-none-eabi-gcc-toolchain wheel
        run: pip install --only-binary=":all:" --no-index --find-links=project/dist/ arm-none-eabi-gcc-toolchain

      - name: Verify GCC Installation
        run: arm-none-eabi-gcc --version

      - name: Clone STM32 project
        uses: actions/checkout@v4
        with:
          repository: 'trebisky/stm32f103'
          ref: 7cfe5feaf02c653352331374d2ad178eb04efde7
          path: 'stm32f103/'
      - name: Build simple blinky project
        working-directory: ./stm32f103/blink1/
        run: make all
