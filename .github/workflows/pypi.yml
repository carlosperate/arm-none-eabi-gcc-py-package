name: Publish to (test) PyPI on GH Release

on:
  release:
    types: published

jobs:
  update-simple-repository:
    name: Update package repository
    uses: ./.github/workflows/publish_repository.yml


  test-release:
    needs: update-simple-repository
    strategy:
      matrix:
        # macOS 13 is x86_64 and macOS 14 is arm64
        os: [ubuntu-20.04, ubuntu-22.04-arm, macos-13, macos-14, windows-2019]
        # Source distribution dependency wheel-stub is Python 3.8+
        python: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: "Test ${{ matrix.os }} - Py ${{ matrix.python }}"
    steps:
      - name: Set the GH Release tag to step output
        id: get_tag
        shell: bash
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Checkout the project in a subdirectory
        uses: actions/checkout@v4
        with:
          path: "project"

      # macOS arm64 only has GCC releases from 12.2.Rel1
      - name: Determine if the rest of the workflow should run
        id: test_this_platform
        shell: bash
        working-directory: project/.github/workflows/
        run: |
          echo "run=$(python is_compat_platform.py ${{ steps.get_tag.outputs.tag }})"
          echo "run=$(python is_compat_platform.py ${{ steps.get_tag.outputs.tag }})" >> $GITHUB_OUTPUT

      - name: Set up Python
        if: steps.test_this_platform.outputs.run == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"

      - name: Download GH Release source distribution
        if: steps.test_this_platform.outputs.run == 'true'
        shell: bash
        run: |
          mkdir dist
          gh release download ${{ steps.get_tag.outputs.tag }} --repo ${{ github.server_url }}/${{ github.repository }} --dir dist --pattern "arm_none_eabi_gcc_toolchain-*.tar.gz"
          ls -la dist
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Verify GCC arm-none-eabi is not present yet
        if: steps.test_this_platform.outputs.run == 'true'
        shell: bash
        run: |
          if arm-none-eabi-gcc --version; then
            exit 1
          else
            exit 0
          fi

      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v3

      - name: Download wheel-stub wheel dependency
        if: ${{ matrix.python != '3.6' && matrix.python != '3.7' }}
        shell: bash
        run: |
          pip download --dest="dist/" wheel-stub
          ls -la dist/
      - name: Install arm-none-eabi-gcc-toolchain source distribution
        if: steps.test_this_platform.outputs.run == 'true'
        run: pip install --no-cache --no-index --find-links=dist/ --no-binary="arm-none-eabi-gcc-toolchain" arm-none-eabi-gcc-toolchain
      - name: Verify GCC Installation
        if: steps.test_this_platform.outputs.run == 'true'
        run: arm-none-eabi-gcc --version

      - name: Clone STM32 project
        if: steps.test_this_platform.outputs.run == 'true'
        uses: actions/checkout@v4
        with:
          repository: 'trebisky/stm32f103'
          ref: 7cfe5feaf02c653352331374d2ad178eb04efde7
          path: 'stm32f103/'
      - name: Build simple blinky project
        if: steps.test_this_platform.outputs.run == 'true'
        working-directory: ./stm32f103/blink1/
        run: make all


  publish-pypi:
    needs: test-release
    name: Publish to PyPI ðŸ“¦
    runs-on: ubuntu-20.04
    environment:
      # Need to configure this when ready
      # https://pypi.org/manage/account/publishing/
      # name: pypi
      # url: https://pypi.org/p/wheel-stub
      name: testpypi
      url: https://test.pypi.org/p/arm-none-eabi-gcc-toolchain
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Set the GH Release tag to step output
        id: get_tag
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Download GH Release source distribution
        run: |
          mkdir dist
          gh release download ${{ steps.get_tag.outputs.tag }} --repo ${{ github.server_url }}/${{ github.repository }} --dir dist --pattern "arm_none_eabi_gcc_toolchain-*.tar.gz"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Publish source distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
